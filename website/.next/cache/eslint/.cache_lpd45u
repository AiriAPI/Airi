[{"E:\\Projects\\Waifuit\\api\\website\\src\\pages\\api\\auth\\user.js":"1","E:\\Projects\\Waifuit\\api\\website\\src\\pages\\callback.js":"2","E:\\Projects\\Waifuit\\api\\website\\src\\pages\\components\\LoadingSpinner.js":"3","E:\\Projects\\Waifuit\\api\\website\\src\\pages\\dashboard.js":"4","E:\\Projects\\Waifuit\\api\\website\\src\\pages\\index.js":"5","E:\\Projects\\Waifuit\\api\\website\\src\\pages\\_app.js":"6","E:\\Projects\\Waifuit\\api\\website\\src\\pages\\_document.js":"7","E:\\Projects\\Waifuit\\api\\website\\src\\utils\\generateToken.js":"8"},{"size":1320,"mtime":1691360554502,"results":"9","hashOfConfig":"10"},{"size":1390,"mtime":1691349004393,"results":"11","hashOfConfig":"10"},{"size":347,"mtime":1691263315094,"results":"12","hashOfConfig":"10"},{"size":12478,"mtime":1691365091901,"results":"13","hashOfConfig":"10"},{"size":6535,"mtime":1691360304974,"results":"14","hashOfConfig":"10"},{"size":193,"mtime":1691340017132,"results":"15","hashOfConfig":"10"},{"size":231,"mtime":1681739850035,"results":"16","hashOfConfig":"10"},{"size":1632,"mtime":1691361286320,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ysmbgz",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\Waifuit\\api\\website\\src\\pages\\api\\auth\\user.js",[],[],"E:\\Projects\\Waifuit\\api\\website\\src\\pages\\callback.js",["44"],[],"import { useRouter } from 'next/router';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst Callback = () => {\r\n  const router = useRouter();\r\n  const { code } = router.query;\r\n\r\n  useEffect(() => {\r\n    if (code) {\r\n      // Exchange the authorization code for an access token\r\n      axios\r\n        .post(\r\n          `https://discord.com/api/oauth2/token`,\r\n          new URLSearchParams({\r\n            client_id: process.env.CLIENT_ID,\r\n            client_secret: process.env.CLIENT_SECRET,\r\n            grant_type: 'authorization_code',\r\n            code,\r\n            redirect_uri: process.env.REDIRECT_URL,\r\n            scope: 'identify%20email',\r\n          }),\r\n          {\r\n            headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          // Store the access token in a cookie\r\n          const { access_token } = response.data;\r\n          Cookies.set('access_token', access_token, { expires: 1 }); // Set an expiration of 1 day\r\n          router.push('/dashboard'); // Redirect to the dashboard page after successful authentication\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error during token exchange:', error);\r\n        });\r\n    }\r\n  }, [code]);\r\n\r\n  return;\r\n};\r\n\r\nexport default Callback;\r\n","E:\\Projects\\Waifuit\\api\\website\\src\\pages\\components\\LoadingSpinner.js",[],[],"E:\\Projects\\Waifuit\\api\\website\\src\\pages\\dashboard.js",["45"],[],"import { useEffect, useState, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\nimport { useRouter } from 'next/router'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport LoadingSpinner from './components/LoadingSpinner'\r\nimport generateToken from '../utils/generateToken'\r\nimport Image from 'next/image'\r\n\r\nconst Dashboard = () => {\r\n  const router = useRouter()\r\n  const [user, setUser] = useState(null)\r\n  const [randomToken, setRandomToken] = useState('')\r\n  const [showToken, setShowToken] = useState(true)\r\n  const [fetched, setFetched] = useState(false) // Add fetched state\r\n  const tokenInputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    // Check if the user has a valid access token\r\n    const accessToken = Cookies.get('access_token')\r\n    if (!accessToken) {\r\n      // Redirect the user to the Discord OAuth login page\r\n      router.push(\r\n        `https://discord.com/api/oauth2/authorize?client_id=${process.env.CLIENT_ID}&redirect_uri=${process.env.REDIRECT_URL}&response_type=code&scope=identify%20email`\r\n      )\r\n      return\r\n    }\r\n\r\n    // The user has a valid access token, fetch user details\r\n    const fetchDiscordUserDetails = async () => {\r\n      try {\r\n        const response = await axios.get('https://discord.com/api/users/@me', {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        })\r\n        setUser(response.data)\r\n        // Call fetchUserDetails here after userData is set\r\n        fetchUserDetails(response.data)\r\n      } catch (error) {\r\n        console.error('Error fetching user details:', error)\r\n        // Handle error, like clearing invalid tokens from cookies and local storage\r\n        Cookies.remove('access_token')\r\n        localStorage.removeItem('showToken')\r\n        router.push(\r\n          `https://discord.com/api/oauth2/authorize?client_id=${process.env.CLIENT_ID}&redirect_uri=${process.env.REDIRECT_URL}&response_type=code&scope=identify%20email`\r\n        )\r\n      } finally {\r\n        setFetched(true) // Mark user details as fetched\r\n      }\r\n    }\r\n\r\n    // Fetch user details function\r\n    const fetchUserDetails = async userData => {\r\n      if (!userData) {\r\n        return // Exit early if userData is undefined\r\n      }\r\n      const response = await axios.post(\r\n        '/api/auth/user', // Send the request to the server-side API route\r\n        {\r\n          id: userData.id,\r\n          email: userData.email,\r\n        }\r\n      )\r\n\r\n      setRandomToken(response.data)\r\n    }\r\n\r\n    // Call the function to fetch user details\r\n    fetchDiscordUserDetails()\r\n    handleToggleShowToken() // Initially show the token\r\n    const storedShowToken = localStorage.getItem('showToken')\r\n    if (storedShowToken) {\r\n      setShowToken(JSON.parse(storedShowToken))\r\n    } else {\r\n      setShowToken(false)\r\n    }\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload)\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload)\r\n    }\r\n  }, [])\r\n\r\n  const handleBeforeUnload = () => {\r\n    localStorage.removeItem('showToken')\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    Cookies.remove('access_token')\r\n    localStorage.removeItem('showToken')\r\n    router.push('/')\r\n  }\r\n\r\n  const handleRegenerateToken = async () => {\r\n    try {\r\n      // Check if the rate limit has been exceeded on the client-side\r\n      const lastRegenTime = parseInt(localStorage.getItem('last_regen_time') || '0', 10);\r\n      const currentTime = Date.now();\r\n      const timeDifference = currentTime - lastRegenTime;\r\n      const minInterval = 30 * 1000; // 2 times per minute (2 * 60 * 1000 ms)\r\n  \r\n      if (timeDifference < minInterval) {\r\n        const remainingTime = (minInterval - timeDifference) / 1000;\r\n        throw new Error(`Rate limit exceeded. Please wait ${remainingTime.toFixed(0)} seconds before regenerating the token again.`);\r\n      }\r\n  \r\n      const accessToken = Cookies.get('access_token');\r\n      if (!accessToken) {\r\n        throw new Error('Access token not found.');\r\n      }\r\n  \r\n      const newToken = generateToken(user.id, process.env.HMAC_KEY);\r\n  \r\n      // Send the new token to the server to save it, similar to the original logic\r\n      const response = await axios.post('/api/auth/user', {\r\n        id: user.id,\r\n        token: newToken,\r\n      });\r\n  \r\n      setRandomToken(newToken);\r\n      setShowToken(true);\r\n  \r\n      // Update the last regeneration time on the client-side\r\n      localStorage.setItem('last_regen_time', currentTime.toString());\r\n  \r\n      toast.info('Successfully regenerated!', {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n  \r\n      console.log('POST request response:', response.data);\r\n    } catch (error) {\r\n      if (error.message.startsWith('Rate limit exceeded')) {\r\n        toast.error(error.message, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n        });\r\n      } else {\r\n        console.error('Error regenerating token:', error);\r\n        toast.error('Error regenerating token.', {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const handleCopyToken = () => {\r\n    navigator.clipboard.writeText(randomToken)\r\n    toast.success('Token copied to clipboard!', {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n    })\r\n  }\r\n\r\n  const getEyeIcon = () => {\r\n    return showToken ? (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-6 w-6 text-gray-500\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n        />\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M2 9l6 6 6-6\"\r\n        />\r\n      </svg>\r\n    ) : (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-6 w-6 text-gray-500\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n        />\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M9 4.535c2.71-.973 5.566-.973 8.276 0M3 3l18 18\"\r\n        />\r\n      </svg>\r\n    )\r\n  }\r\n\r\n  const handleToggleShowToken = () => {\r\n    setShowToken(prevShowToken => !prevShowToken)\r\n    localStorage.setItem('showToken', JSON.stringify(!showToken))\r\n  }\r\n\r\n  const handleScroll = event => {\r\n    event.preventDefault()\r\n    const { deltaY } = event\r\n    const inputElement = tokenInputRef.current\r\n    const maxScrollTop = inputElement.scrollHeight - inputElement.clientHeight\r\n    const newScrollTop = inputElement.scrollTop + deltaY\r\n\r\n    if (newScrollTop >= maxScrollTop) {\r\n      setShowToken(false)\r\n    } else if (newScrollTop <= 0) {\r\n      setShowToken(true)\r\n    }\r\n  }\r\n\r\n  const handleLogoutClick = e => {\r\n    e.stopPropagation()\r\n    handleLogout()\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white\">\r\n      <ToastContainer />\r\n      {fetched && user ? (\r\n        <>\r\n          <div className=\"p-4\">\r\n            <nav className=\"max-w-screen-lg mx-auto flex flex-col md:flex-row items-center justify-between\">\r\n              <div className=\"text-white font-bold text-xl mb-4 md:mb-0\">\r\n                <span>Dashboard</span>\r\n              </div>\r\n              <div className=\"space-x-4 flex items-center relative\">\r\n                {' '}\r\n                {/* Add relative positioning */}\r\n                {/* Home button */}\r\n                <button\r\n                  onClick={() => router.push('/')} // Add the home route here\r\n                  className=\"block py-2 pl-3 pr-4 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent\"\r\n                >\r\n                  Home\r\n                </button>\r\n                {/* Documentation button */}\r\n                <button\r\n                  onClick={() => router.push('https://docs.waifu.it')} // Add the documentation route here\r\n                  className=\"block py-2 pl-3 pr-4 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent\"\r\n                >\r\n                  Documentation\r\n                </button>\r\n                {/* User picture */}\r\n                <div className=\"relative flex items-center\">\r\n                  {' '}\r\n                  {/* Add flex and items-center */}\r\n                  <Image\r\n                    src={`https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.png`}\r\n                    alt={user.username}\r\n                    className=\"w-8 h-8 rounded-full cursor-pointer\"\r\n                  />\r\n                  {/* Logout button */}\r\n                  <button\r\n                    onClick={handleLogoutClick}\r\n                    className=\"block py-2 pl-3 pr-4 text-gray-900 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent\"\r\n                  >\r\n                    Logout\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n\r\n          <div className=\"py-8\">\r\n            <div className=\"max-w-screen-lg mx-auto px-4\">\r\n              {randomToken && (\r\n                <div\r\n                  className=\"max-w-md mx-auto bg-gray-100 p-4 rounded-md mb-4\"\r\n                  style={{ marginTop: '140px' }}\r\n                >\r\n                  <div className=\"flex justify-between items-center mb-2\">\r\n                    <span className=\"text-sm font-medium\">Token:</span>\r\n                  </div>\r\n\r\n                  <div className=\"relative max-w-xs md:max-w-full\">\r\n                    <input\r\n                      ref={tokenInputRef}\r\n                      type={showToken ? 'text' : 'password'}\r\n                      value={randomToken}\r\n                      readOnly\r\n                      className={`w-full px-3 py-2 rounded-md bg-white border border-gray-300 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\r\n                        showToken ? 'text-base' : 'text-sm'\r\n                      } md:text-base text-ellipsis`}\r\n                      onWheel={handleScroll}\r\n                    />\r\n                    <div\r\n                      className=\"absolute top-0 right-0 bottom-0 flex items-center px-3 cursor-pointer\"\r\n                      onClick={handleToggleShowToken}\r\n                    >\r\n                      {getEyeIcon()}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"mt-4 flex justify-end space-x-2\">\r\n                    <button\r\n                      onClick={handleRegenerateToken}\r\n                      className=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\"\r\n                      style={{ marginTop: '5px' }}\r\n                    >\r\n                      Regenerate\r\n                    </button>\r\n                    <button\r\n                      onClick={handleCopyToken}\r\n                      className=\"bg-green-500 text-white px-3 py-1 rounded hover:bg-green-600\"\r\n                      style={{ marginTop: '5px' }}\r\n                    >\r\n                      Copy\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <footer\r\n            className=\"w-full h-12 border-t border-gray-300 flex justify-center items-center mt-auto md:mt-10 lg:mt-20 text-sm\"\r\n            style={{ marginTop: '160px' }}\r\n          >\r\n            Made with ❤️ by Aeryk\r\n          </footer>\r\n        </>\r\n      ) : (\r\n        <div className=\"flex flex-grow items-center justify-center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","E:\\Projects\\Waifuit\\api\\website\\src\\pages\\index.js",[],[],"E:\\Projects\\Waifuit\\api\\website\\src\\pages\\_app.js",[],[],"E:\\Projects\\Waifuit\\api\\website\\src\\pages\\_document.js",[],[],"E:\\Projects\\Waifuit\\api\\website\\src\\utils\\generateToken.js",[],[],{"ruleId":"46","severity":1,"message":"47","line":40,"column":6,"nodeType":"48","endLine":40,"endColumn":12,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":85,"column":6,"nodeType":"48","endLine":85,"endColumn":8,"suggestions":"51"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","ArrayExpression",["52"],"React Hook useEffect has missing dependencies: 'handleToggleShowToken' and 'router'. Either include them or remove the dependency array.",["53"],{"desc":"54","fix":"55"},{"desc":"56","fix":"57"},"Update the dependencies array to be: [code, router]",{"range":"58","text":"59"},"Update the dependencies array to be: [handleToggleShowToken, router]",{"range":"60","text":"61"},[1335,1341],"[code, router]",[3078,3080],"[handleToggleShowToken, router]"]